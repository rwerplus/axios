{"map":"{\"version\":3,\"file\":\"url.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/tools/url.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import { isDate, isPlainObject } from './util';\r\nfunction encode(val) {\r\n    return encodeURIComponent(val)\r\n        .replace(/%40/g, '@')\r\n        .replace(/%3A/gi, ':')\r\n        .replace(/%24/g, '$')\r\n        .replace(/%2C/gi, ',')\r\n        .replace(/%20/g, '+')\r\n        .replace(/%5B/gi, '[')\r\n        .replace(/%5D/gi, ']');\r\n}\r\nexport function buildURL(url, params) {\r\n    if (!params)\r\n        return url;\r\n    var parts = [];\r\n    Object.keys(params).forEach(function (key) {\r\n        var val = params[key];\r\n        if (val === null || typeof val === 'undefined') {\r\n            return;\r\n        }\r\n        var values = [];\r\n        if (Array.isArray(val)) {\r\n            values = val;\r\n            key += '[]';\r\n        }\r\n        else {\r\n            values = [val];\r\n        }\r\n        values.forEach(function (val) {\r\n            if (isDate(val)) {\r\n                val = val.toISOString();\r\n            }\r\n            else if (isPlainObject(val)) {\r\n                val = JSON.stringify(val);\r\n            }\r\n            parts.push(encode(key) + \"=\" + encode(val));\r\n        });\r\n    });\r\n    var serializedParams = parts.join('&');\r\n    if (serializedParams) {\r\n        var markIndex = url.indexOf('#');\r\n        if (markIndex !== -1) {\r\n            url = url.slice(0, markIndex);\r\n        }\r\n        url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\r\n    }\r\n    return url;\r\n}\r\nexport var isURLSameOrigin = function (requestURL) {\r\n    var parseOrigin = resolveURL(requestURL);\r\n    return parseOrigin.protocol === currentOrigin.protocol && parseOrigin.host === currentOrigin.host;\r\n};\r\nvar urlParsingNode = document.createElement('a');\r\nvar currentOrigin = resolveURL(window.location.href);\r\nfunction resolveURL(url) {\r\n    urlParsingNode.setAttribute('href', url);\r\n    var protocol = urlParsingNode.protocol, host = urlParsingNode.host;\r\n    return { protocol: protocol, host: host };\r\n}\r\n//# sourceMappingURL=url.js.map","dts":{"name":"F:/code_gitee/f-voied-axios/dist/types/tools/url.d.ts","writeByteOrderMark":false,"text":"export declare function buildURL(url: string, params?: any): string;\r\nexport declare const isURLSameOrigin: (requestURL: string) => boolean;\r\n"}}
