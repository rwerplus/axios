{"map":"{\"version\":3,\"file\":\"Axios.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/core/Axios.ts\"],\"names\":[],\"mappings\":\"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\"}","code":"import dispatchRequest from './dispatchRequest';\r\nimport InterceptorManager from './InterceptorManager';\r\nimport { mergeConfig } from './mergeConfig';\r\nvar Axios = /** @class */ (function () {\r\n    function Axios(initConf) {\r\n        this.defaults = initConf;\r\n        this.interceptors = {\r\n            request: new InterceptorManager(),\r\n            response: new InterceptorManager()\r\n        };\r\n    }\r\n    Axios.prototype.request = function (url, conf) {\r\n        if (typeof url === 'string') {\r\n            if (!conf)\r\n                conf = {};\r\n            conf.url = url;\r\n        }\r\n        else {\r\n            conf = url;\r\n        }\r\n        /*发送请求前使用合并策略合并请求头*/\r\n        conf = mergeConfig(this.defaults, conf);\r\n        /*增加链式调用*/\r\n        var chain = [{\r\n                resolved: dispatchRequest,\r\n                rejected: undefined\r\n            }];\r\n        /*请求中 先添加后执行*/\r\n        this.interceptors.request.forEach(function (interceptor) {\r\n            chain.unshift(interceptor);\r\n        });\r\n        /*响应中 先添加先执行*/\r\n        this.interceptors.response.forEach(function (interceptor) {\r\n            chain.push(interceptor);\r\n        });\r\n        var promise = Promise.resolve(conf);\r\n        while (chain.length) {\r\n            var _a = chain.shift(), resolved = _a.resolved, rejected = _a.rejected;\r\n            promise = promise.then(resolved, rejected);\r\n        }\r\n        return promise;\r\n    };\r\n    Axios.prototype.get = function (url, conf) {\r\n        return Axios._requestMethodWithoutData('get', url, conf);\r\n    };\r\n    Axios.prototype.delete = function (url, conf) {\r\n        return Axios._requestMethodWithoutData('delete', url, conf);\r\n    };\r\n    Axios.prototype.head = function (url, conf) {\r\n        return Axios._requestMethodWithoutData('head', url, conf);\r\n    };\r\n    Axios.prototype.options = function (url, conf) {\r\n        return Axios._requestMethodWithoutData('options', url, conf);\r\n    };\r\n    Axios.prototype.post = function (url, data, conf) {\r\n        return Axios._requestMethodWithData('post', url, data, conf);\r\n    };\r\n    Axios.prototype.put = function (url, data, conf) {\r\n        return Axios._requestMethodWithData('put', url, data, conf);\r\n    };\r\n    Axios.prototype.patch = function (url, data, conf) {\r\n        return Axios._requestMethodWithData('patch', url, data, conf);\r\n    };\r\n    Axios._requestMethodWithoutData = function (method, url, conf) {\r\n        return Axios._request(Object.assign(conf || {}, {\r\n            method: method,\r\n            url: url\r\n        }));\r\n    };\r\n    Axios._requestMethodWithData = function (method, url, data, conf) {\r\n        return Axios._request(Object.assign(conf || {}, {\r\n            method: method,\r\n            url: url,\r\n            data: data\r\n        }));\r\n    };\r\n    Axios._request = function (conf) {\r\n        return dispatchRequest(conf);\r\n    };\r\n    return Axios;\r\n}());\r\nexport default Axios;\r\n//# sourceMappingURL=Axios.js.map","dts":{"name":"F:/code_gitee/f-voied-axios/dist/types/core/Axios.d.ts","writeByteOrderMark":false,"text":"import { AxiosPromise, AxiosRequestConfig, AxiosResponse } from '../types';\r\nimport InterceptorManager from './InterceptorManager';\r\ninterface Interceptors {\r\n    request: InterceptorManager<AxiosRequestConfig>;\r\n    response: InterceptorManager<AxiosResponse>;\r\n}\r\nexport default class Axios {\r\n    defaults: AxiosRequestConfig;\r\n    interceptors: Interceptors;\r\n    constructor(initConf: AxiosRequestConfig);\r\n    request<T = any>(url: any, conf?: any): AxiosPromise<T>;\r\n    get<T = any>(url: string, conf?: AxiosRequestConfig): AxiosPromise<T>;\r\n    delete<T = any>(url: string, conf?: AxiosRequestConfig): AxiosPromise<T>;\r\n    head<T = any>(url: string, conf?: AxiosRequestConfig): AxiosPromise<T>;\r\n    options<T = any>(url: string, conf?: AxiosRequestConfig): AxiosPromise<T>;\r\n    post<T = any>(url: string, data?: any, conf?: AxiosRequestConfig): AxiosPromise<T>;\r\n    put<T = any>(url: string, data?: any, conf?: AxiosRequestConfig): AxiosPromise<T>;\r\n    patch<T = any>(url: string, data?: any, conf?: AxiosRequestConfig): AxiosPromise<T>;\r\n    private static _requestMethodWithoutData;\r\n    private static _requestMethodWithData;\r\n    private static _request;\r\n}\r\nexport {};\r\n"}}
