{"map":"{\"version\":3,\"file\":\"error.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/types/error.ts\"],\"names\":[],\"mappings\":\";AAEA;IAAgC,8BAAK;IAOnC,oBACE,OAAe,EACf,MAA0B,EAC1B,IAAoB,EACpB,OAAa,EACb,QAAwB;QAL1B,YAOE,kBAAM,OAAO,CAAC,SAOf;QANC,KAAI,CAAC,MAAM,GAAG,MAAM,CAAA;QACpB,KAAI,CAAC,IAAI,GAAG,IAAI,CAAA;QAChB,KAAI,CAAC,OAAO,GAAG,OAAO,CAAA;QACtB,KAAI,CAAC,QAAQ,GAAG,QAAQ,CAAA;QACxB,KAAI,CAAC,YAAY,GAAG,IAAI,CAAA;QACxB,MAAM,CAAC,cAAc,CAAC,KAAI,EAAE,UAAU,CAAC,SAAS,CAAC,CAAA;;IACnD,CAAC;IACH,iBAAC;AAAD,CAAC,AAtBD,CAAgC,KAAK,GAsBpC;;AAED,MAAM,UAAU,WAAW,CACzB,OAAe,EACf,MAA0B,EAC1B,IAAoB,EACpB,OAAa,EACb,QAAwB;IACxB,OAAO,IAAI,UAAU,CAAC,OAAO,EAAE,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;AACjE,CAAC\"}","code":"import { __extends } from \"tslib\";\r\nvar AxiosError = /** @class */ (function (_super) {\r\n    __extends(AxiosError, _super);\r\n    function AxiosError(message, config, code, request, response) {\r\n        var _this = _super.call(this, message) || this;\r\n        _this.config = config;\r\n        _this.code = code;\r\n        _this.request = request;\r\n        _this.response = response;\r\n        _this.isAxiosError = true;\r\n        Object.setPrototypeOf(_this, AxiosError.prototype);\r\n        return _this;\r\n    }\r\n    return AxiosError;\r\n}(Error));\r\nexport { AxiosError };\r\nexport function createError(message, config, code, request, response) {\r\n    return new AxiosError(message, config, code, request, response);\r\n}\r\n//# sourceMappingURL=error.js.map","dts":{"name":"F:/code_gitee/f-voied-axios/dist/types/types/error.d.ts","writeByteOrderMark":false,"text":"import { AxiosRequestConfig, AxiosResponse } from './index';\r\nexport declare class AxiosError extends Error {\r\n    isAxiosError: boolean;\r\n    config: AxiosRequestConfig;\r\n    code?: string | null;\r\n    request?: any;\r\n    response?: AxiosResponse;\r\n    constructor(message: string, config: AxiosRequestConfig, code?: string | null, request?: any, response?: AxiosResponse);\r\n}\r\nexport declare function createError(message: string, config: AxiosRequestConfig, code?: string | null, request?: any, response?: AxiosResponse): AxiosError;\r\n"}}
